{"version":3,"sources":["webpack:///./src/app/events/service-eventdata.service.ts","webpack:///./src/app/service-auth.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/events/data-event.ts","webpack:///./src/app/events/event.module.ts","webpack:///./src/app/events/eventedit.component.ts","webpack:///./src/app/events/eventlist.component.ts","webpack:///./src/app/events/model-event.ts","webpack:///./src/app/events/pipe-eventfilter.pipe.ts","webpack:///./src/app/shared/about.component.ts","webpack:///./src/app/shared/generic-validator.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/events/eventedit.component.html","webpack:///./src/app/events/eventlist.component.html","webpack:///./src/app/shared/about.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/of';\r\n\r\nimport { IEvent} from './model-event';\r\n\r\n@Injectable()\r\nexport class ServiceEventData {\r\n\r\n    //Used as the URL for the InMemoryDbService database \r\n    private baseUrl = 'api/events';\r\n\r\n    //Constructor\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    //Get all events\r\n    getEvents (): Observable<IEvent[]> {\r\n        return this.http.get(this.baseUrl).map(this.extractData).do(data => console.log('Service: getEvents: ' + JSON.stringify(data))).catch(this.handleError);\r\n    }\r\n\r\n    //Get one event. If id=0, return new/blank event\r\n    getEvent(id: number): Observable<IEvent> {\r\n        if (id ===0 ) {\r\n            return Observable.of(this.initializeNewEvent());\r\n        }\r\n        else {\r\n            const url = `${this.baseUrl}/${id}`;\r\n            return this.http.get(url).map(this.extractData).do(data => console.log('Service: getEvent: ' + JSON.stringify(data))).catch(this.handleError);\r\n        }\r\n    }\r\n\r\n    //Delete event\r\n    deleteEvent(id: number): Observable<Response> {\r\n        let headers = new Headers({'Content-Type': 'application/json'});\r\n        let options = new RequestOptions({headers: headers});\r\n\r\n        const url = `${this.baseUrl}/${id}`;\r\n        return this.http.delete(url, options).do(data => console.log('Service: deleteEvent: ' + JSON.stringify(data))).catch(this.handleError);\r\n    }\r\n\r\n    //Save event. If id=0, save as new event, if not, update old event\r\n    saveEvent(event: IEvent): Observable<IEvent> {\r\n        let headers = new Headers({'Content-Type': 'application/json'});\r\n        let options = new RequestOptions({headers: headers});\r\n\r\n        if (event.id === 0) {\r\n            event.id = undefined;\r\n            return this.http.post(this.baseUrl, event, options).map(this.extractData).do(data => console.log('Service: createEvent: ' + JSON.stringify(data))).catch(this.handleError);\r\n        }\r\n        else {\r\n            const url = `${this.baseUrl}/${event.id}`;\r\n            return this.http.put(url, event, options).map(() => event).do(data => console.log('Service: updateEvent: ' + JSON.stringify(data))).catch(this.handleError);\r\n        }\r\n    }\r\n\r\n    private extractData(response: Response) {\r\n        let body = response.json();\r\n        return body.data || {};\r\n    }\r\n\r\n    private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n\r\n    private initializeNewEvent(): IEvent {\r\n        return {\r\n            id: 0,\r\n            eventName: null,\r\n            eventType: \"SelectEventType\",\r\n            eventStart: (new Date()).toISOString().split(\"T\")[0],\r\n            eventEnd: (new Date()).toISOString().split(\"T\")[0],\r\n            eventCity: null,\r\n            eventState: null,\r\n            eventCountry: null,\r\n            eventCost: null,\r\n            eventComment: null\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/service-eventdata.service.ts","import { Injectable } from '@angular/core';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n// Avoid name not cound warnings\r\ndeclare var Auth0Lock: any;\r\n\r\n@Injectable()\r\nexport class ServiceAuth {\r\n    //Configure Auth0\r\n    lock = new Auth0Lock( 'gpoaLFY92U66mGgAllObNrU2TBye19Dw', 'fdagher1.auth0.com', {\r\n        theme: { \r\n            primaryColor: \"#31324F\",\r\n            logo: \"favicon.png\"\r\n        },\r\n        languageDictionary: {\r\n            title: \"Event Recorder\"\r\n        }\r\n    });\r\n\r\n    //Profile object for auth class\r\n    userProfile: Object;\r\n\r\n    constructor() {\r\n        //Set userProfile attribute of already saved Profile\r\n        this.userProfile = JSON.parse(localStorage.getItem('profile'));\r\n        \r\n        // Add callback for the Lock `authenticated` event\r\n        this.lock.on('authenticated', (authResult) => { \r\n            localStorage.setItem('id_token', authResult.idToken);\r\n\r\n            //Fetch profile information\r\n            this.lock.getProfile(authResult.idToken, (error, profile) => {\r\n                if (error) {\r\n                    alert(error);\r\n                    return;\r\n                }\r\n\r\n                localStorage.setItem('profile', JSON.stringify(profile));\r\n                this.userProfile = profile;\r\n            });\r\n        });\r\n    }\r\n    \r\n    public login() {\r\n        this.lock.show();\r\n    }\r\n\r\n    public logout() {\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('profile');\r\n        this.userProfile = undefined;\r\n    }\r\n\r\n    public authenticated(){\r\n        return tokenNotExpired();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service-auth.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 387;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 387\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\nimport { ServiceAuth } from './service-auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: `\n        <div class='panel panel-primary'>\n        \n            <div class='panel-heading' style=\"position: fixed; width: 100%; height: 40px; margin-top: 0px; z-index: 1;\">\n                <a [routerLink]=\"['']\" style=\"color:white;text-decoration:none;margin: 20;\"> {{pageTitle}} </a>\n\n                <button class=\"btn btn-default btn-xs\" style=\"float: right;\" (click)=\"serviceauth.login()\" *ngIf=\"!serviceauth.authenticated()\">Log In</button>\n                <button class=\"btn btn-default btn-xs\" style=\"float: right;\" (click)=\"serviceauth.logout()\" *ngIf=\"serviceauth.authenticated() && serviceauth.userProfile\">Log Out {{serviceauth.userProfile.nickname}}</button>\n                <button class=\"btn btn-default btn-xs\" style=\"float: right;\" (click)=\"serviceauth.logout()\" *ngIf=\"serviceauth.authenticated() && !serviceauth.userProfile\">Log Out </button>      \n            </div>                           \n            \n            <<div style=\"margin-top: 20px; z-index: -1\">\n              <router-outlet></router-outlet>\n            </div>\n\n        </div>\n  ` \n})\nexport class AppComponent  { \n  pageTitle: string = 'Event Recorder'; \n\n  constructor (private serviceauth: ServiceAuth) {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// Angular Modules\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\n// App Components, filters, services and models\nimport { AppComponent }  from './app.component';\nimport { ServiceAuth } from './service-auth.service';\n\n// Modules\nimport { EventModule } from './events/event.module';\n\n@NgModule({\n  imports:      [ \n    BrowserModule,\n    RouterModule.forRoot([\n    ]),\n    EventModule\n  ],\n  declarations: [ \n    AppComponent\n  ],\n  bootstrap:    [ \n    AppComponent \n  ],\n  providers: [\n    ServiceAuth\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nimport { IEvent } from './model-event';\r\n\r\nexport class DataEvent implements InMemoryDbService {\r\n\r\n    createDb() {\r\n        let events: IEvent[] = [\r\n            {\r\n                'id': 1,\r\n                'eventType': 'Concert/Play',\r\n                'eventName': 'Yanni Concert at Warner Theater',\r\n                'eventStart': '2017-04-01',\r\n                'eventEnd': '2017-04-01',\r\n                'eventCity': 'Washington DC',\r\n                'eventState': 'DC',\r\n                'eventCountry': 'United States',\r\n                'eventCost': '47',\r\n                'eventComment': 'Amazing music, great seats'\r\n            },\r\n            {\r\n                'id': 2,\r\n                'eventType': 'Activity',\r\n                'eventName': 'Ski at Liberty Mountain',\r\n                'eventStart': '2016-02-03',\r\n                'eventEnd': '2016-02-03',\r\n                'eventCity': 'Littlestown',\r\n                'eventState': 'PA',\r\n                'eventCountry': 'United States',\r\n                'eventCost': '120',\r\n                'eventComment': 'Fun but tiring, nice company'\r\n            },\r\n            {\r\n                'id': 3,\r\n                'eventType': 'Restaurant',\r\n                'eventName': 'DC Steakhouse',\r\n                'eventStart': '2016-06-02',\r\n                'eventEnd': '2016-06-02',\r\n                'eventCity': 'Washington DC',\r\n                'eventState': 'DC',\r\n                'eventCountry': 'United States',\r\n                'eventCost': '138',\r\n                'eventComment': 'Very good food. Suit required!'\r\n            },\r\n            {\r\n                'id': 4,\r\n                'eventType': 'Hotel',\r\n                'eventName': 'Hotel Elephant',\r\n                'eventStart': '2016-01-18',\r\n                'eventEnd': '2016-01-21',\r\n                'eventCity': \"Lisbon\",\r\n                'eventState': 'Lisbon',\r\n                'eventCountry': 'Portugal',\r\n                'eventCost': '120/night',\r\n                'eventComment': 'Central location, small rooms'\r\n            },\r\n            {\r\n                'id': 5,\r\n                'eventType': 'Site',\r\n                'eventName': 'Lisbon Sites',\r\n                'eventStart': '2016-01-19',\r\n                'eventEnd': '2016-01-19',\r\n                'eventCity': 'Lisbon',\r\n                'eventState': 'Lisbon',\r\n                'eventCountry': 'Portugal',\r\n                'eventCost': 'free',\r\n                'eventComment': 'Lots of walking'\r\n            },\r\n            {\r\n                'id': 6,\r\n                'eventType': 'Site',\r\n                'eventName': 'San Juan Sites',\r\n                'eventStart': '2016-02-17',\r\n                'eventEnd': '2016-02-17',\r\n                'eventCity': 'San Juan',\r\n                'eventState': 'San Juan',\r\n                'eventCountry': 'Puerto Rico',\r\n                'eventCost': 'free',\r\n                'eventComment': ''\r\n            }\r\n        ];\r\n        return { events };\r\n    }\r\n}\r\n\r\n        \n\n\n// WEBPACK FOOTER //\n// ./src/app/events/data-event.ts","// Angular Modules\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// Angular modules for loading & configuring the in-memory web api and Angular JWT\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\n\r\n//Event module's Components, Filters, Services and Modules \r\nimport { DataEvent }  from './data-event';\r\nimport { EventListComponent } from './eventlist.component';\r\nimport { ServiceEventData } from './service-eventdata.service';\r\nimport { PipeEventFilter } from './pipe-eventfilter.pipe';\r\nimport { EventEditComponent } from './eventedit.component';\r\n\r\n//Modules\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule ({\r\n    imports: [\r\n        SharedModule,\r\n        RouterModule.forChild([\r\n            {path: '', component: EventEditComponent },\r\n            {path: 'edit/:id', component: EventEditComponent},\r\n            {path: 'list', component: EventListComponent},\r\n            {path: '**', component: EventListComponent }\r\n        ]),\r\n        InMemoryWebApiModule.forRoot(DataEvent)\r\n    ],\r\n    declarations: [       \r\n        EventListComponent,\r\n        PipeEventFilter,\r\n        EventEditComponent\r\n    ],\r\n    providers: [\r\n        ServiceEventData\r\n    ]\r\n})\r\nexport class EventModule {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/event.module.ts","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router  } from '@angular/router';\r\n\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/observable/merge';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { GenericValidator } from '../shared/generic-validator';\r\n\r\nimport { IEvent } from './model-event';\r\nimport { eventTypes } from './model-event';\r\nimport { ServiceEventData } from './service-eventdata.service';\r\n\r\n@Component ({\r\n    templateUrl: './eventedit.component.html'\r\n})\r\nexport class EventEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    //Variables used for validators\r\n    displayMessage: { [key: string]: string } = {};\r\n    private validationMessages: { [key: string]: { [key: string]: string } };\r\n    private genericValidator: GenericValidator;\r\n\r\n    //Used to display a message when an error occurs while getting or updating events through the event service\r\n    errorMessage: string;\r\n\r\n    //Used to display successful entering of random event\r\n    statusMessage: string;\r\n\r\n    //Used to check if the eventedit view is for a new event or edit event\r\n    eventIdFromRouter;\r\n\r\n    //Used to check if form is in View or Edit Mode\r\n    editMode: boolean = false;\r\n\r\n    //Variable used to create the form and bind to data \r\n    eventForm: FormGroup;\r\n    event: IEvent;\r\n    eventTypes = eventTypes;\r\n\r\n    //Get formInputElements\r\n    @ViewChildren(FormControlName, {read: ElementRef }) formInputElements: ElementRef[];\r\n\r\n    //Variable used to subscribe to changes in ID value in URL\r\n    private sub: Subscription;\r\n\r\n    constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private serviceeventData: ServiceEventData) {\r\n\r\n        //Define validation messages\r\n        this.validationMessages = { \r\n            eventType: {\r\n                required: 'Event name is required.'\r\n            },\r\n            eventName: { required: 'Event name is required.', minlength: 'Event name must be at least three characters', maxlength: 'Event name cannot exceed 50 characters.'\r\n            },\r\n            eventStart: {\r\n                required: 'Event start date is required.'\r\n            },\r\n            eventEnd: {\r\n                required: 'Event end date is required.'\r\n            },\r\n            eventCity: {\r\n                required: 'Event city name is required.'\r\n            },\r\n            eventState: {\r\n                required: 'Event state name is required.'\r\n            },\r\n            eventCountry: {\r\n                required: 'Event country name is required.'\r\n            }\r\n        };\r\n        this.genericValidator = new GenericValidator(this.validationMessages);\r\n    }\r\n\r\n    //During initialization of this component, create the form group and form components, then get event ID from URL\r\n    ngOnInit(): void {\r\n        console.log(\"ngOnInit\");\r\n        //Create Reactive Form\r\n        this.eventForm = this.fb.group({\r\n            eventType: ['', Validators.required],\r\n            eventName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n            eventStart: ['', Validators.required],\r\n            eventEnd: ['', Validators.required],\r\n            eventCity: ['', Validators.required],\r\n            eventState: ['', Validators.required],\r\n            eventCountry: ['', Validators.required],\r\n            eventCost: [''],\r\n            eventComment: ['']\r\n        });\r\n\r\n        //Get the event id that is passed through the URL, and then get the corresponding event to populate sheet with event data. If id=0, put sheet in edit mode\r\n        this.sub = this.route.params.subscribe(\r\n            params => {\r\n                if (isNaN(+params['id'])) { \r\n                    this.eventIdFromRouter = 0;\r\n                }\r\n                else {\r\n                    this.eventIdFromRouter = +params['id'];\r\n                }\r\n\r\n                this.getEvent(this.eventIdFromRouter);\r\n                \r\n                if (this.eventIdFromRouter==0) {\r\n                    this.EditButtonClick();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        console.log(\"ngAfterViewInit\");\r\n        // Watch for the blur event from any input element on the form.\r\n        let controlBlurs: Observable<any>[] = this.formInputElements.map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n        // Merge the blur event observable with the valueChanges observable\r\n        Observable.merge(this.eventForm.valueChanges, ...controlBlurs).debounceTime(800).subscribe(value => { \r\n            this.displayMessage = this.genericValidator.processMessages(this.eventForm);\r\n        });    \r\n    }\r\n\r\n    //When done editing the event data, unsubscribe \r\n    ngOnDestroy(): void {\r\n        console.log(\"ngOnDestroy\");\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n\r\n    EditButtonClick(): void {\r\n        this.editMode = true;\r\n        document.getElementsByName(\"formfieldset\")[0].removeAttribute(\"disabled\");\r\n    }\r\n    \r\n    //If event form has data which is valid, merge it with what the event object initially had, then send it to save data service\r\n    SaveFormButtonClick(): void {\r\n        if (this.eventForm.dirty && this.eventForm.valid) {\r\n            let e = Object.assign({}, this.event, this.eventForm.value);\r\n            \r\n            this.serviceeventData.saveEvent(e).subscribe(() => this.onEventSaved(), (error: any) => this.errorMessage = <any>error);\r\n\r\n            //Reroute to this in order to refill the form with the default values\r\n            this.router.navigate(['/edit/0']);\r\n        } \r\n    }\r\n\r\n    EventListButtonClick(): void {\r\n        this.router.navigate(['/eventlist']);\r\n    }\r\n\r\n    DeleteButtonClick(): void {\r\n        if (confirm(`Really delete the event: ${this.event.eventName}?`)) {\r\n            this.serviceeventData.deleteEvent(this.event.id).subscribe(() => this.onEventSaved(), (error: any) => this.errorMessage = <any>error);\r\n        }\r\n    }\r\n\r\n    //Create random event object and add to view\r\n    GenerateButtonClick(): void {       \r\n        let generatedEvent: IEvent = {id: 0, eventType: \"Activity\",\r\n                                        eventName: \"Scuba Diving\", \r\n                                        eventStart: (new Date()).toISOString().split(\"T\")[0], \r\n                                        eventEnd: (new Date()).toISOString().split(\"T\")[0], \r\n                                        eventCity: \"Bandos Island\",\r\n                                        eventState: \"Maldives\",\r\n                                        eventCountry: \"Maldvies\",\r\n                                        eventCost:\"$110\",\r\n                                        eventComment: \"Saw a small shark!\"};\r\n\r\n        this.eventForm.controls['eventName'].setValue(generatedEvent.eventName);\r\n        this.eventForm.controls['eventName'].markAsDirty();\r\n        this.eventForm.controls['eventType'].setValue(generatedEvent.eventType);\r\n        this.eventForm.controls['eventType'].markAsDirty();\r\n        this.eventForm.controls['eventStart'].setValue(generatedEvent.eventStart);\r\n        this.eventForm.controls['eventStart'].markAsDirty();\r\n        this.eventForm.controls['eventEnd'].setValue(generatedEvent.eventEnd);\r\n        this.eventForm.controls['eventEnd'].markAsDirty();\r\n        this.eventForm.controls['eventCity'].setValue(generatedEvent.eventCity);\r\n        this.eventForm.controls['eventCity'].markAsDirty();\r\n        this.eventForm.controls['eventState'].setValue(generatedEvent.eventState);\r\n        this.eventForm.controls['eventState'].markAsDirty();\r\n        this.eventForm.controls['eventCountry'].setValue(generatedEvent.eventCountry);\r\n        this.eventForm.controls['eventCountry'].markAsDirty();\r\n        this.eventForm.controls['eventCost'].setValue(generatedEvent.eventCost);\r\n        this.eventForm.controls['eventCost'].markAsDirty();\r\n        this.eventForm.controls['eventComment'].setValue(generatedEvent.eventComment);\r\n        this.eventForm.controls['eventComment'].markAsDirty();\r\n    }\r\n\r\n    //Requests the event from the dataservice and updates the form accordingly\r\n    private getEvent(id: number): void {\r\n        this.serviceeventData.getEvent(id).subscribe((event: IEvent) => this.onEventRetrieved(event),(error: any) => this.errorMessage = <any>error);\r\n    }\r\n\r\n    //Update form values with event data\r\n    private onEventRetrieved(event: IEvent): void {\r\n        //The below entryis needed, otherwise, a message \"id is missing\" (or the like) appears \r\n        this.event = event;\r\n\r\n        this.eventForm.patchValue({ eventType: event.eventType,\r\n                                    eventName: event.eventName,\r\n                                    eventStart: event.eventStart,\r\n                                    eventEnd: event.eventEnd,\r\n                                    eventCity: event.eventCity,\r\n                                    eventState: event.eventState,\r\n                                    eventCountry: event.eventCountry,\r\n                                    eventCost: event.eventCost,\r\n                                    eventComment: event.eventComment})                         \r\n    }\r\n\r\n    //Display successful save message for 1 second, then reset form entries and navigate to form\r\n    private onEventSaved(): void {\r\n        this.statusMessage = \"Saved\";\r\n        Observable.timer(1000).subscribe( x => this.statusMessage = \"\");\r\n        this.eventForm.reset();\r\n        this.router.navigate(['']);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/eventedit.component.ts","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { IEvent } from './model-event';\r\nimport { ServiceEventData } from './service-eventdata.service';\r\n\r\n@Component({\r\n    templateUrl: './eventlist.component.html'\r\n})\r\nexport class EventListComponent implements OnInit {\r\n    //Used as placeholder for the filter \r\n    listFilter: string;\r\n\r\n    //Used for displaying any errors occured when retrieving event data\r\n    errorMessage: string;\r\n\r\n    //This is the event model \r\n    events: IEvent[];\r\n\r\n    constructor (private serviceeventData : ServiceEventData) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.serviceeventData.getEvents().subscribe(events => this.events = events, error => this.errorMessage = <any>error);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/eventlist.component.ts","export interface IEvent {\r\n    id: number;\r\n    eventType: string;\r\n    eventName: string;\r\n    eventStart: string;\r\n    eventEnd: string;\r\n    eventCity: string;\r\n    eventState: string;\r\n    eventCountry: string;\r\n    eventCost: string;\r\n    eventComment: string;\r\n}\r\n\r\nexport const eventTypes: string[] = [\"Activity\", \"Concert/Play\", \"Conference\", \"Hotel\", \"Museum\", \"Restaurant\", \"Site\", \"Tour\", \"Visit\", \"Work Trip\"];\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/model-event.ts","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { IEvent } from './model-event';\r\n\r\n@Pipe({\r\n    name:'pipeeventFilter'\r\n})\r\nexport class PipeEventFilter implements PipeTransform {\r\n    transform (value: IEvent[], filterBy: string): IEvent[] \r\n    {\r\n        if ( filterBy ) \r\n        { \r\n            filterBy = filterBy.toLocaleLowerCase();\r\n        }\r\n        else\r\n        {\r\n            filterBy = null;\r\n        }\r\n        \r\n        if ( filterBy )\r\n        {\r\n            return value.filter((event: IEvent) => event.eventName.toLocaleLowerCase().indexOf(filterBy) !== -1 );\r\n        }\r\n        else\r\n        {\r\n            return value;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/pipe-eventfilter.pipe.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './about.component.html'\r\n})\r\nexport class AboutComponent {\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/about.component.ts","import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n\n    // Provide the set of valid validation messages\n    // Stucture:\n    // controlName1: {\n    //     validationRuleName1: 'Validation Message.',\n    //     validationRuleName2: 'Validation Message.'\n    // },\n    // controlName2: {\n    //     validationRuleName1: 'Validation Message.',\n    //     validationRuleName2: 'Validation Message.'\n    // }\n    constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n    }\n\n    // Processes each control within a FormGroup\n    // And returns a set of validation messages to display\n    // Structure\n    // controlName1: 'Validation Message.',\n    // controlName2: 'Validation Message.'\n    processMessages(container: FormGroup): { [key: string]: string } {\n        let messages = {};\n        for (let controlKey in container.controls) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                let c = container.controls[controlKey];\n                // If it is a FormGroup, process its child controls.\n                if (c instanceof FormGroup) {\n                    let childMessages = this.processMessages(c);\n                    Object.assign(messages, childMessages);\n                } else {\n                    // Only validate if there are validation messages for the control\n                    if (this.validationMessages[controlKey]) {\n                        messages[controlKey] = '';\n                        if ((c.dirty || c.touched) && c.errors) {\n                            Object.keys(c.errors).map(messageKey => {\n                                if (this.validationMessages[controlKey][messageKey]) {\n                                    messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return messages;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/generic-validator.ts","// Angular Modules\r\nimport { NgModule }  from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AboutComponent} from './about.component';\r\n\r\n@NgModule({\r\n  imports: [ \r\n    CommonModule,\r\n    HttpModule,\r\n    RouterModule.forChild([\r\n            {path: 'about', component: AboutComponent }\r\n        ]),\r\n    ],\r\n  exports : [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [ \r\n    AboutComponent\r\n  ],\r\n})\r\nexport class SharedModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"<style>\\r\\n\\r\\n.col-xs-4, .col-xs-6, .col-xs-12 {\\r\\n    padding-left: 5px;\\r\\n    padding-right: 5px;\\r\\n    \\r\\n}\\r\\n\\r\\n.verticalspacing-5px {\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\\r\\n</style>\\r\\n\\r\\n<form (ngSubmit)=\\\"SaveFormButtonClick()\\\" [formGroup]=\\\"eventForm\\\" novalidate>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <fieldset name=\\\"formfieldset\\\" disabled>\\r\\n\\r\\n            <div name=\\\"Event_Type_Name\\\" class=\\\"form-group\\\">          \\r\\n                <div class=\\\"col-xs-6 col-lg-6 verticalspacing-5px\\\">\\r\\n                    <select class=\\\"form-control\\\" \\r\\n                            formControlName=\\\"eventType\\\">\\r\\n                        <option value=\\\"SelectEventType\\\" disabled>Select Event Type</option>\\r\\n                        <option *ngFor=\\\"let eventType of eventTypes\\\" [value]=\\\"eventType\\\">{{eventType}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-6 col-lg-6 verticalspacing-5px\\\" [ngClass]=\\\"{'has-error': displayMessage.eventName }\\\">\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"Event Name (required)\\\" />\\r\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"displayMessage.eventName\\\">{{displayMessage.eventName}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div name=\\\"Event_Start_End\\\" class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-xs-6 col-lg-6 verticalspacing-5px\\\">\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventStart\\\" \\r\\n                            type=\\\"date\\\"\\r\\n                            name=\\\"eventStart\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-6 col-lg-6 verticalspacing-5px\\\">\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventEnd\\\" \\r\\n                            type=\\\"date\\\"\\r\\n                            name=\\\"eventEnd\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div name=\\\"Event_City_State_Country\\\" class=\\\"form-group col-xs-6 col-lg-6\\\">\\r\\n                <div class=\\\"verticalspacing-5px\\\" >\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventCity\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"City Name\\\"\\r\\n                            name=\\\"eventCity\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"verticalspacing-5px\\\">\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventState\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"State Name\\\"\\r\\n                            name=\\\"eventState\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"verticalspacing-5px\\\">\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventCountry\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"Country Name\\\"\\r\\n                            name=\\\"eventCountry\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div name=\\\"Event_Cost_Comment\\\" class=\\\"form-group col-xs-6 col-lg-6\\\">\\r\\n                <div class=\\\"verticalspacing-5px\\\">\\r\\n                    <input class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventCost\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"Cost\\\"\\r\\n                            name=\\\"eventCost\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"verticalspacing-5px\\\">\\r\\n                    <textarea class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"eventComment\\\"\\r\\n                            placeholder=\\\"Comments\\\"\\r\\n                            name=\\\"eventComment\\\"\\r\\n                            cols=\\\"20\\\"\\r\\n                            rows=\\\"3\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"has-error\\\" *ngIf=\\\"errorMessage\\\">\\r\\n                {{errorMessage}}\\r\\n            </div>\\r\\n\\r\\n        </fieldset>\\r\\n    </div>\\r\\n    <div class=\\\"panel-footer\\\" style=\\\"position: fixed; bottom: 0px; width: 100%; height: 50px;\\\" *ngIf=\\\"editMode\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button class=\\\"btn btn-primary\\\"\\r\\n                    type=\\\"submit\\\"\\r\\n                    style=\\\"width:80px;margin-right:10px\\\"\\r\\n                    [disabled]='!eventForm.valid'>\\r\\n                Save\\r\\n            </button>\\r\\n            <a *ngIf=\\\"eventIdFromRouter > 0\\\" \\r\\n                class=\\\"btn btn-default\\\"\\r\\n                style=\\\"width:80px\\\"\\r\\n                (click)=\\\"DeleteButtonClick()\\\">\\r\\n                Delete\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-default\\\"\\r\\n                style=\\\"width:80px\\\"\\r\\n                (click)=\\\"EventListButtonClick()\\\">\\r\\n                EventList\\r\\n            </a>\\r\\n            <a *ngIf=\\\"eventIdFromRouter === 0\\\"\\r\\n                class=\\\"btn btn-default\\\"\\r\\n                style=\\\"width:80px\\\"\\r\\n                (click)=\\\"GenerateButtonClick()\\\">\\r\\n                Generate\\r\\n            </a>\\r\\n            <span class='has-error' *ngIf='statusMessage'>\\r\\n                {{statusMessage}}\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='panel-footer' style=\\\"position: fixed; bottom: 0px; width: 100%; height: 50px;\\\" *ngIf=\\\"!editMode\\\">\\r\\n        <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/list']\\\" style=\\\"width:80px\\\">\\r\\n            Back\\r\\n        </button>\\r\\n        <a class=\\\"btn btn-primary\\\" (click)=\\\"EditButtonClick()\\\" style=\\\"width:80px;margin-left:10px\\\">\\r\\n            Edit\\r\\n        </a>\\r\\n    </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/events/eventedit.component.html\n// module id = 574\n// module chunks = 1","module.exports = \"\\r\\n<div class='panel-body'>\\r\\n    <div class='row' style=\\\"margin-bottom:4px\\\">\\r\\n        <div class='col-md-4'>\\r\\n            <input type='text' placeholder='Filter by' [(ngModel)]='listFilter' />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='has-error' *ngIf='errorMessage'>\\r\\n        {{errorMessage}}\\r\\n    </div>\\r\\n\\r\\n    <div class='table-responsive'>\\r\\n        <table class='table' *ngIf='events && events.length'>\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"col-xs-6 col-lg-6\\\">Event Name</th>\\r\\n                    <th class=\\\"col-xs-6 col-lg-6\\\">Event Description</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor='let event of events | pipeeventFilter:listFilter'>\\r\\n                    <td><a [routerLink]=\\\"['/edit', event.id]\\\">{{event.eventName}}</a></td>\\r\\n                    <td>{{event.eventType}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>   \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel-footer\\\" style=\\\"position: fixed; bottom: 0px; width: 100%; height: 50px;\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/edit', 0]\\\">\\r\\n        New\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/about']\\\" style=\\\"float: right\\\">\\r\\n        About \\r\\n    </button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/events/eventlist.component.html\n// module id = 575\n// module chunks = 1","module.exports = \"<form style=\\\"margin-left:2mm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\">Website: </label>\\r\\n        eventsrecorder.azurewebsites.net\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\">Version: </label>\\r\\n        0.5\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\">Author: </label>\\r\\n        FD\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/about.component.html\n// module id = 576\n// module chunks = 1"],"sourceRoot":""}